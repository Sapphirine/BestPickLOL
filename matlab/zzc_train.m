%% Parameters settings
    trainFileName = "filteredTrain.csv"; % Generated by "filter.py"
    dimention = 10; % Weight accuracy
    % Show results
        showMatrix = 1;
        showRate = 1;
        showPosition = 1;

%% Pre-process data
    fprintf("Reading data... ");
    data = readmatrix(trainFileName);
    data = data(:,[3,14:2:32]);
    items = size(data,1);
    win = data(:,1);
    score = zeros(size(win));
    p0s = data(:,2:6);  % own side
    p1s = data(:,7:11); % op side
    fprintf("Done\n");

%% Build parameter matrix
    fprintf("Culculating matrix... ");
    Mco = zeros(555);
    Mop = zeros(555);
    cMco = eye(555);
    cMop = eye(555);
    for r = 1:items
        if win(r) == 1
            score(r) = -1;
        else
            score(r) = 1;
        end
    end
    for r = 1:items
        for n = 1:5
            p0 = p0s(r,n);
            if(p0 == 0)
                continue;
            end
            for m = 1:5
                p0e = p0s(r,m);
                p1 = p1s(r,m);
                if(p1 ~= p0 && p1 ~= 0)
                    Mop(p0,p1) = Mop(p0,p1) + score(r);
                    cMop(p1,p0) = cMop(p1,p0) + 1;
                    cMop(p0,p1) = cMop(p0,p1) + 1;
                end
                if(p0e ~= p0 && p0e ~= 0)
                    Mco(p0,p0e) = Mco(p0,p0e) + score(r);
                    cMco(p0,p0e) = cMco(p0,p0e) + 1;
                    cMco(p0e,p0) = cMco(p0e,p0) + 1;
                end
            end
        end
    end
    for r = 1:items
        for n = 1:5
            p1 = p1s(r,n);
            if(p1 == 0)
                continue;
            end
            for m = 1:5
                p1e = p1s(r,m);
                p0 = p0s(r,m);
                if(p0 ~= p1 && p0 ~= 0)
                    Mop(p1,p0) = Mop(p1,p0) - score(r);
                    cMop(p1,p0) = cMop(p1,p0) + 1;
                    cMop(p0,p1) = cMop(p0,p1) + 1;
                end
                if(p1e ~= p1 && p1e ~= 0)
                    Mco(p1,p1e) = Mco(p1,p1e) - score(r);
                    cMco(p1,p1e) = cMco(p1,p1e) + 1;
                    cMco(p1e,p1) = cMco(p1e,p1) + 1;
                end
            end
        end
    end
    cMco(cMco==0) = 1;
    cMop(cMop==0) = 1;
    Mco = Mco./cMco * 1000;
    Mop = Mop./cMop * 1000;
    fprintf("Done\n");
    fprintf("Saving matrix to *.csv file... ");
    writematrix(Mco,"Mco.csv");
    writematrix(Mop,"Mop.csv");
    fprintf("Done\n");

%% Find weights that let correct rate the highest
    fprintf("Calculating Scores... ");
    s0co = zeros(items,1);
    s1co = zeros(items,1);
    sop = zeros(items,1);
    for r = 1:items
        for n = 1:5
            p0 = p0s(r,n);
            if(p0 == 0)
                continue;
            end
            for m = 1:5
                p0e = p0s(r,m);
                p1 = p1s(r,m);
                if(p0e==0 || p1==0)
                    continue;
                end
                s0co(r) = s0co(r) + Mco(p0,p0e);
                sop(r) = sop(r) + Mop(p0,p1);
            end
        end
        for n = 1:5
            p1 = p1s(r,n);
            if(p1 == 0)
                continue;
            end
            for m = 1:5
                p1e = p1s(r,m);
                if(p1e==0)
                    continue;
                end
                s1co(r) = s1co(r) + Mco(p1,p1e);
            end
        end
    end
    fprintf("Done\n");
    fprintf("Searching for best weight... ");
    correctRate = zeros(dimention);
    for Wco = 1:dimention
        for Wop = 1:dimention
            correct = 0;
            unsure = 0;
            s0 = (s0co-s1co).*Wco + sop.*Wop;
            for r = 1:items
                if(s0(r) > 0 && win(r) == 0)
                    correct = correct + 1;
                elseif(s0(r) < 0 && win(r) == 1)
                    correct = correct + 1;
                elseif(s0(r) == 0)
                    unsure = unsure + 1;
                end
            end
            correctRate(Wco,Wop) = (correct/(items-unsure))*100;
        end
    end
    maxCorrectRate = max(correctRate(:));
    fprintf("Done\n");
    
%% Show results
    fprintf("\n[Misson Complete]\n");
    if(showMatrix == 1)
        fprintf("Correct Rate matrix:\n");
        display([0:dimention;[1:dimention]',correctRate])
    end
    if(showRate == 1)
        fprintf("Max Correct Rate: %7.4f\n",maxCorrectRate);
    end
    if(showPosition == 1)
        [x,y] = find(correctRate == maxCorrectRate);
        display(["Wco","Wop";x,y])
    end